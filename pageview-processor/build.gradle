group ''
version '1.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
	mavenLocal()
	maven {
    	url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compile (   		 	
    		//rfx-core
			'io.vertx:vertx-core:2.1.5'			
			,'com.typesafe.akka:akka-actor_2.10:2.3.11'
			,'com.google.code.gson:gson:2.4'    		
			,'log4j:log4j:1.2.17'
			,'org.jsoup:jsoup:1.8.3'    		
			,'org.apache.commons:commons-lang3:3.3.2'
			,'commons-net:commons-net:3.3'			
			,'org.apache.commons:commons-pool2:2.4.2'			    		
			,'redis.clients:jedis:2.9.0'
			,'org.apache.httpcomponents:httpclient:4.5'   		
    		, fileTree(dir: 'lib', include: '**/*.jar')
    		
    		//rfx-stream
    		,'commons-dbcp:commons-dbcp:1.4'
    		,'commons-io:commons-io:2.4'
    		,'org.apache.commons:commons-math3:3.4.1'    		
    		,'org.apache.kafka:kafka_2.10:0.8.2.1'    	
    		,'org.yaml:snakeyaml:1.14'
    		,'org.mongodb:mongo-java-driver:3.0.2'
    		,'org.twitter4j:twitter4j-core:4.0.2'
    		,'com.google.guava:guava:18.0' 
    		,'org.codehaus.groovy:groovy:2.3.9' 
    		
 			//data job and API
			,'org.mongodb:mongo-java-driver:3.3.0'
            ,'org.mongodb.morphia:morphia:1.2.1'
            
            ,'io.github.benas:random-beans-randomizers:3.0.0'
    		   
    		)
	testCompile(
			'junit:junit:4.12'
			,'io.github.benas:random-beans:3.0.0'
	)
}

task listJars << {
	println "---------------------deps---------------------------"
    configurations.compile.each { File file -> println file.name }
    println "-----------------------------------------------------------"
}

task printClasspathStringJars << {   
    println getClasspathStringJars()
}

def getClasspathStringJars() {
	def baseFolder = 'deps/'
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + file.name) }
    
    def classpath = fileNames.join(" ; ")    
    return '. ; ' + classpath + ' ; '
}

task CopyRuntimeLibs(type: Copy) {  
  into "build/libs/deps"  
  from configurations.compile  
}

task CopyConfigs(type: Copy) {  
  into "build/libs/configs"  
  from files('configs')
}

task buildJarWorker(type: Jar) {	
	dependsOn classes   
    from(sourceSets.main.output) {
        include "**"
    }
    version = '1.0'
    baseName = '-stream-worker'
    manifest {
   		attributes ('Implementation-Title': 'AdProcessingWorker', 
        			'Implementation-Version': version ,
        			'Main-Class': '.worker.AdProcessingWorker',
        			'Class-Path' : getClasspathStringJars() 
        			)
	}
}

task buildJarScheduledJob(type: Jar) {	
	dependsOn classes   
    from(sourceSets.main.output) {
        include "**"
    }
    version = '1.0'
    baseName = '-scheduled-job'
    manifest {
   		attributes ('Implementation-Title': 'ScheduledJobWorker', 
        			'Implementation-Version': version ,
        			'Main-Class': '.worker.ScheduledJobWorker',
        			'Class-Path' : getClasspathStringJars() 
        			)
	}
}


